const handler = async (m, {conn, usedPrefix, command, args, isOwner, isAdmin, isROwner}) => {
const optionsFull = `_*< FUN√áOES do BOT />*_\n 
‚ñ¢ *Op√ß√£o:* ‚ú® | WELCOME
‚ñ¢ *Comando:* ${usedPrefix + command} welcome
‚ñ¢ *Descri√ß√£o:* Ativa ou desativa a boa vinda a novos membros neste grupo.

--------------------------------

‚ñ¢ *Op√ß√£o:* üåé | MODO PUBLICO
‚ñ¢ *Comando:* ${usedPrefix + command} public
‚ñ¢ *Descri√ß√£o:* O bot estar√° ativo somente para owner ou para todos.
‚ñ¢ *Nota:* Este comando s√≥ pode ser usado pelo Spy.

--------------------------------

‚ñ¢ *Op√ß√£o:* ü•µ | MODO HORNY
‚ñ¢ *Comando:* ${usedPrefix + command} modohorny
‚ñ¢ *Descri√ß√£o:* Ativa ou desativa os comandos +18 neste grupo.

--------------------------------

‚ñ¢ *Op√ß√£o:* üîó | ANTILINK
‚ñ¢ *Comando:* ${usedPrefix + command} antilink
‚ñ¢ *Descri√ß√£o:* Ativa ou desativa o anti-links de WhatsApp.
‚ñ¢ *Nota:* Necessita ter Ativa la fun√ß√£o restrict.

--------------------------------

‚ñ¢ *Op√ß√£o:* üîó | ANTILINK 2
‚ñ¢ *Comando:* ${usedPrefix + command} antilink2
‚ñ¢ *Descri√ß√£o:* Ativa ou desativa o anti-links que inici√£o em HTTPS.
‚ñ¢ *Nota:* Necesita ter Ativa a fun√ß√£o restrict.

--------------------------------

‚ñ¢ *Op√ß√£o:* üîé | DETECT
‚ñ¢ *Comando:* ${usedPrefix + command} detect
‚ñ¢ *Descri√ß√£o:* Ativa ou desativa as notifica√ß√µes de trocas neste grupo.

--------------------------------

‚ñ¢ *Op√ß√£o:* üîé | DETECT 2
‚ñ¢ *Comando:* ${usedPrefix + command} detect2
‚ñ¢ *Descri√ß√£o:* Detecta modifica√ß√µes no grupo para ajudar a manter uma melhor gest√£o.
--------------------------------

‚ñ¢ *Op√ß√£o:* ‚ùó | RESTRICT
‚ñ¢ *Comando:* ${usedPrefix + command} restrict
‚ñ¢ *Descri√ß√£o:* Ativa ou desativa as restricciones do Bot, como a de remover ou adcionar pessoas a um grupo.
‚ñ¢ *Nota:* Este comando s√≥ pode ser usado pelo Spy.

--------------------------------

‚ñ¢ *Op√ß√£o:* ‚òëÔ∏è | AUTOREAD
‚ñ¢ *Comando:* ${usedPrefix + command} autoread
‚ñ¢ *Descri√ß√£o:* Marca como lido todas as mensagens e os status autom√°ticamente.
‚ñ¢ *Nota:* Este comando s√≥ pode ser usado pelo Spy.

--------------------------------

‚ñ¢ *Op√ß√£o:* üîä | AUDIOS
‚ñ¢ *Comando:* ${usedPrefix + command} audios
‚ñ¢ *Descri√ß√£o:* Ativa ou desativa os comandos de audios sen prefixos, messe grupo.

--------------------------------

‚ñ¢ *Op√ß√£o:* üëæ | AUTOSTICKER
‚ñ¢ *Comando:* ${usedPrefix + command} autosticker 
‚ñ¢ *Descri√ß√£o:* Todas as imagenes o videos enviados neste grupo se conviertem em stickers sem precisar enviar comando. 

--------------------------------

‚ñ¢ *Op√ß√£o:* üí¨ | PCONLY
‚ñ¢ *Comando:* ${usedPrefix + command} pconly
‚ñ¢ *Descri√ß√£o:* O Bot s√≥ responder√° aos comandos em um chat privado.
‚ñ¢ *Nota:* Este comando s√≥ pode ser usado pelo Spy.

--------------------------------

‚ñ¢ *Op√ß√£o:* üè¢ | GCONLY
‚ñ¢ *Comando:* ${usedPrefix + command} gconly
‚ñ¢ *Descri√ß√£o:* O Bot s√≥ responder√° aos comandos em um grupo. 
‚ñ¢ *Nota:* Este comando s√≥ pode ser usado pelo Spy.

--------------------------------

‚ñ¢ *Op√ß√£o:* ‚ùå | ANTIVIEWONCE 
‚ñ¢ *Comando:* ${usedPrefix + command} antiviewonce
‚ñ¢ *Descri√ß√£o:* As imagens enviadas para ver s√≥ uma vez, s√£o reenviadas pelo Bot. 

--------------------------------

‚ñ¢ *Op√ß√£o:* üìµ | ANTICHAMADAS
‚ñ¢ *Comando:* ${usedPrefix + command} anticall
‚ñ¢ *Descri√ß√£o:* O Bot bloquer√° as pessoas que realizem uma liga√ß√£o ao Bot. 
‚ñ¢ *Nota:* Este comando s√≥ poder√° ser usado por owners do Bot.

--------------------------------

‚ñ¢ *Op√ß√£o:* ü§¨ | ANTITOXIC
‚ñ¢ *Comando:* ${usedPrefix + command} antitoxic
‚ñ¢ *Descri√ß√£o:* Detecta as palavras mal intencionadas e advierte o participante do grupo, antes de ser eliminado.
‚ñ¢ *Nota:* Se necesita ter ativa a fun√ß√£o restrict.

--------------------------------

‚ñ¢ *Op√ß√£o:* üï∏Ô∏è | ANTITRABAS
‚ñ¢ *Comando:* ${usedPrefix + command} antitraba
‚ñ¢ *Descri√ß√£o:* O Bot detecta textos longos que podem ser virus e causar lag no chat e elimina o usu√°rio.
‚ñ¢ *Nota:* Se necesita ter ativa a fun√ß√£o restrict.

--------------------------------

‚ñ¢ *Op√ß√£o:* üëé | ANTIARABES
‚ñ¢ *Comando:* ${usedPrefix + command} antiarabes
‚ñ¢ *Descri√ß√£o:* Se um numero √°rabe se une ao grupo, o Bot ir√° elimina-lo automaticamente.
‚ñ¢ *Nota:* Se necesita ter ativo welcome e restrict.

--------------------------------

‚ñ¢ *Op√ß√£o:* üëé | ANTIARABES 2
‚ñ¢ *Comando:* ${usedPrefix + command} antiarabes2
‚ñ¢ *Descri√ß√£o:* Se um numero √°rabe se une ao grupo, o Bot ir√° elimina-lo automaticamente.
‚ñ¢ *Nota:* Se necesita ter ativa a fun√ß√£o restrict.

--------------------------------

‚ñ¢ *Op√ß√£o:* üëë | MODOADMIN
‚ñ¢ *Comando:* ${usedPrefix + command} modoadmin
‚ñ¢ *Descri√ß√£o:* O Bot s√≥ responder√° as mensagens enviadas pelos admins. do grupo.

--------------------------------

‚ñ¢ *Op√ß√£o:* üòÉ | SIMSIMI
‚ñ¢ *Comando:* ${usedPrefix + command} simsimi
‚ñ¢ *Descri√ß√£o:* O Bot passar√° a responder a todas as mensagens usando a IA de SimSimi.

--------------------------------

‚ñ¢ *Op√ß√£o:* üõ°Ô∏è | ANTIDELETE
‚ñ¢ *Comando:* ${usedPrefix + command} antidelete
‚ñ¢ *Descri√ß√£o:* O Bot detecta quando um usu√°rio elimina uma mensagem e reenvia.

--------------------------------

‚ñ¢ *Op√ß√£o:* üîä | AUDIOS_BOT
‚ñ¢ *Comando:* ${usedPrefix + command} audios_bot
‚ñ¢ *Descri√ß√£o:* Desativa os audios do Bot do menuaudios para todos os chats privados.
‚ñ¢ *Nota:* Este comando s√≥ pode ser usado pelo Spy.

--------------------------------

‚ñ¢ *Op√ß√£o:* ü§ñ | MODOIA
‚ñ¢ *Comando:* ${usedPrefix + command} modoia
‚ñ¢ *Descri√ß√£o:* Se ativa o modo "Inteligencia Artificial" com ChatGPT em todos os chats privados.
‚ñ¢ *Nota:* Este comando s√≥ pode ser usado pelo Spy.

--------------------------------

‚ñ¢ *Op√ß√£o:* ‚è≥ | ANTISPAM
‚ñ¢ *Comando:* ${usedPrefix + command} antispam
‚ñ¢ *Descri√ß√£o:* O Bot detecta quando um usuario faz spam de comando e o bane por 5 segundos e o adverte.
‚ñ¢ *Nota:* Este comando s√≥ pode ser usado pelo Spy.

--------------------------------

‚ñ¢ *Op√ß√£o:* ü§ñ | MODO-SUB
‚ñ¢ *Comando:* ${usedPrefix + command} modejadibot
‚ñ¢ *Descri√ß√£o:* Ativa ou desativa o uso do comando para sub bots (${usedPrefix}serbot. 
‚ñ¢ *Nota:* Este comando s√≥ pode ser usado pelo Spy.

--------------------------------

‚ñ¢ *Op√ß√£o:* üí¨ | ANTIPRIVADO
‚ñ¢ *Comando:* ${usedPrefix + command} antiprivado
‚ñ¢ *Descri√ß√£o:* O Bot bloquear√° as pessoas que escrevam no privado do Bot. 
‚ñ¢ *Nota:* Este comando s√≥ pode ser usado pelo Spy.`.trim();

  const isEnable = /true|ativa|(turn)?on|1/i.test(command);
  const chat = global.db.data.chats[m.chat];
  const user = global.db.data.users[m.sender];
  const bot = global.db.data.settings[conn.user.jid] || {};
  const type = (args[0] || '').toLowerCase();
  let isAll = false; const isUser = false;
  switch (type) {
    case 'welcome':
      if (!m.isGroup) {
        if (!isOwner) {
          global.dfail('group', m, conn);
          throw false;
        }
      } else if (!(isAdmin || isOwner || isROwner)) {
        global.dfail('admin', m, conn);
        throw false;
      }
      chat.welcome = isEnable;
      break;
    case 'detect':
      if (!m.isGroup) {
        if (!isOwner) {
          global.dfail('group', m, conn);
          throw false;
        }
      } else if (!isAdmin) {
        global.dfail('admin', m, conn);
        throw false;
      }
      chat.detect = isEnable;
      break;
    case 'detect2':
      if (!m.isGroup) {
        if (!isOwner) {
          global.dfail('group', m, conn);
          throw false;
        }
      } else if (!isAdmin) {
        global.dfail('admin', m, conn);
        throw false;
      }
      chat.detect2 = isEnable;
      break;
    case 'simsimi':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.simi = isEnable;
      break;
    case 'antiporno':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiporno = isEnable;
      break;
    case 'doete':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.doete = isEnable;
      break;
    case 'antidoete':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antidoete = isEnable;
      break;
    case 'public':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['self'] = !isEnable;
      break;
    case 'antilink':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiLink = isEnable;
      break;
    case 'antilink2':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiLink2 = isEnable;
      break;
    case 'antiviewonce':
      if (m.isGroup) {
        if (!(isAdmin || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiviewonce = isEnable;
      break;
    case 'modohorny':
      if (m.isGroup) {
        if (!(isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.modohorny = isEnable;
      break;
    case 'modoadmin':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.modoadmin = isEnable;
      break;
    case 'autosticker':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.autosticker = isEnable;
      break;
    case 'audios':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.audios = isEnable;
      break;
    case 'restrict':
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.restrict = isEnable;
      break;
    case 'audios_bot':
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.audios_bot = isEnable;      
      break;
    case 'modoia':
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.modoia = isEnable;      
      break;      
    case 'nyimak':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['nyimak'] = isEnable;
      break;
    case 'autoread':
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      bot.autoread2 = isEnable;
      //global.opts['autoread'] = isEnable;
      break;
    case 'pconly':
    case 'privateonly':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['pconly'] = isEnable;
      break;
    case 'gconly':
    case 'grouponly':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['gconly'] = isEnable;
      break;
    case 'swonly':
    case 'statusonly':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      global.opts['swonly'] = isEnable;
      break;
    case 'anticall':
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.antiCall = isEnable;
      break;
    case 'antiprivado':
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.antiPrivate = isEnable;
      break;
    case 'modejadibot':
      isAll = true;
      if (!isROwner) {
        global.dfail('rowner', m, conn);
        throw false;
      }
      bot.modejadibot = isEnable;
      break;
    case 'antispam':
      isAll = true;
      if (!(isROwner || isOwner)) {
        global.dfail('owner', m, conn);
        throw false;
      }
      bot.antispam = isEnable;
      break;
    case 'antitoxic':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiToxic = isEnable;
      break;
      case 'game': case 'juegos': case 'fun': case 'ruleta':
if (m.isGroup) {
if (!(isAdmin || isOwner)) {
global.dfail('admin', m, conn)
throw false
}}
chat.game = isEnable          
break;
    case 'antitraba':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiTraba = isEnable;
      break;
    case 'antiarabes':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn); 
          throw false;
        }
      }
      chat.antiArab = isEnable;
      break;
    case 'antiarabes2':
      if (m.isGroup) {
        if (!(isAdmin || isROwner || isOwner)) {
          global.dfail('admin', m, conn);
          throw false;
        }
      }
      chat.antiArab2 = isEnable;
      break;
    default:
      if (!/[01]/.test(command)) return await conn.sendMessage(m.chat, {text: optionsFull}, {quoted: m});
      throw false;
  }
  conn.sendMessage(m.chat, {text: `_*< FUN√á√ïES do BOT />*_\n\n*[ ‚ÑπÔ∏è ] A Op√ß√£o* _${type}_ *foi* ${isEnable ? '_ATIVADA_' : '_DESATIVADA_'} *exitosamente para este* ${isAll ? '_bot._' : isUser ? '' : '_chat._'}`}, {quoted: m});
  //conn.sendMessage(m.chat, {text: `‚ñ¢ *Op√ß√£o:* ${type}\n\n‚ñ¢ *Estado:* ${isEnable ? 'Ativado' : 'desativado'}\n\n‚ñ¢ *Para* ${isAll ? 'este bot' : isUser ? '' : 'este chat'}`}, {quoted: m});
};
handler.command = /^((a|desa)tiva|(tru|fals)e|(turn)?[01])$/i;
export default handler;
